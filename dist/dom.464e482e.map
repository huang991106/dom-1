{"version":3,"sources":["dom.js"],"names":["window","dom","create","string","container","document","createElement","innerHTML","trim","content","firstChild","after","node","node2","parentNode","insertBefore","nextSibling","before","append","parent","appendChild","warp","remove","removeChild","empty","childNodes","array","x","push","attr","name","value","arguments","length","setAttribute","getAttribute","text","innerText","textContent","html","style","Object","key","class","add","className","classList","has","contains","on","eventName","fn","addEventListener","off","removeEventListener","find","selector","scope","querySelectorAll","children","siblings","Array","from","filter","n","next","nodeType","previous","previousSibling","each","nodeList","i","call","index","list"],"mappings":"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","file":"dom.464e482e.map","sourceRoot":"..\\src","sourcesContent":["window.dom = {\r\n    create(string) {\r\n        const container = document.createElement(\"template\")\r\n        container.innerHTML = string.trim(); //trim()把两边的空格去掉\r\n        return container.content.firstChild;\r\n    },\r\n    after(node,node2){\r\n        //找到这个节点的爸爸调用insetBefore方法把node2插入到node节点下一个节点的前面\r\n        node.parentNode.insertBefore(node2, node.nextSibling)\r\n    },\r\n    before(node,node2){\r\n        //找到这个节点的爸爸调用insetBefore方法把node2插入到node的前面\r\n        node.parentNode.insertBefore(node2, node)\r\n    },\r\n    append(parent,node){\r\n        //新增儿子\r\n        parent.appendChild(node)\r\n    },\r\n    warp(node,parent){\r\n        //新增爸爸\r\n        dom.before(node,parent)\r\n        dom.append(parent,node)\r\n    },\r\n    remove(node){\r\n        //删除节点\r\n        node.parentNode.removeChild(node)\r\n        return node\r\n    },\r\n    empty(node){\r\n        //删除节点的所有儿子,返回移除的对象\r\n        \r\n        // const {childNodes} = node === const childNodes = node.childNodes\r\n        const {childNodes} = node\r\n        const array = []\r\n        let x = node.firstChild\r\n        while(x){\r\n            array.push(dom.remove(node.firstChild))\r\n            x = node.firstChild\r\n        }\r\n        return array\r\n    },\r\n    attr(node, name, value){ //重载\r\n        if(arguments.length === 3){\r\n            node.setAttribute(name, value)\r\n        }else if(arguments.length === 2){\r\n            return node.getAttribute(name)\r\n        }\r\n    },\r\n    text(node,string){ //读写文本\r\n        //适配\r\n        if(arguments.length ===2){\r\n            if('innerText' in node){\r\n                node.innerText = string\r\n            }else{\r\n                node.textContent = string\r\n            }\r\n        }else if(arguments.length ===1){\r\n            if('innerText' in node){\r\n                return node.innerText\r\n            }else{\r\n                return node.textContent\r\n            }\r\n        }\r\n    },\r\n    html(node, string){//读写html内容\r\n        if(arguments.length ===2){\r\n            node.innerHTML = string\r\n        }else if(arguments.length ===1){\r\n            return node.innerHTML\r\n        }\r\n    },\r\n    style(node, name, value){ //修改style\r\n        if(arguments.length === 3){\r\n            node.style[name] = value\r\n        }else if(arguments.length === 2){\r\n            if(typeof name ==='string'){\r\n                return node.style[name]\r\n            }else if(name instanceof Object){\r\n                for(let key in name){\r\n                    node.style[key] = name[key]\r\n                }\r\n            }\r\n        }\r\n    },\r\n    class:{ //class增加 删除 查找\r\n        add(node, className){\r\n            node.classList.add(className)\r\n        },\r\n        remove(node, className){\r\n            node.classList.remove(className)\r\n        },\r\n        has(node, className){\r\n            return node.classList.contains(className)\r\n        }\r\n    },\r\n    on(node, eventName, fn){ //添加/删除 事件监听\r\n        node.addEventListener(eventName, fn)\r\n    },\r\n    off(node, eventName, fn){\r\n        node.removeEventListener(eventName,fn)\r\n    },\r\n    find(selector, scope){//用于获取标签或标签们\r\n        //scope 范围\r\n        return (scope || document.querySelectorAll(selector))\r\n    },\r\n    parent(node){ //获取父亲\r\n        return node.parentNode\r\n    },\r\n    children(node){//获取儿子\r\n        return node.children\r\n    },\r\n    siblings(node){ //获取兄弟姐妹\r\n        return Array.from(node.parentNode.children).filter(n => n !== node)\r\n    },\r\n    next(node){// 获取弟弟\r\n        let x = node.nextSibling\r\n        while(x && x.nodeType === 3){\r\n            x = x.nextSibling\r\n        }\r\n        return x\r\n    },\r\n    previous(node){//获取哥哥\r\n        let x = node.previousSibling\r\n        while(x && x.nodeType === 3){\r\n            x = x.previousSibling\r\n        }\r\n        return x\r\n    },\r\n    each(nodeList, fn){//遍历所有节点\r\n        for(let i=0; i < nodeList.length ; i++){\r\n            fn.call(null, nodeList[i])\r\n        }\r\n    },\r\n    index(node){//用于获取排行老几\r\n        const list = dom.children(node.parentNode)\r\n        let i\r\n        for(i=0;i<list.length;i++){\r\n            if(list[i] === node){\r\n                break\r\n            }\r\n        }\r\n        return i\r\n    }\r\n};\r\n"]}